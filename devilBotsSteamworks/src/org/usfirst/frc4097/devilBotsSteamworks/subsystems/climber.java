// RobotBuilder Version: 2.0
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// Java from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.


package org.usfirst.frc4097.devilBotsSteamworks.subsystems;

import org.usfirst.frc4097.devilBotsSteamworks.Robot;
import org.usfirst.frc4097.devilBotsSteamworks.RobotMap;
import org.usfirst.frc4097.devilBotsSteamworks.commands.*;

import edu.wpi.first.wpilibj.Joystick;
import edu.wpi.first.wpilibj.Spark;
import edu.wpi.first.wpilibj.SpeedController;

import edu.wpi.first.wpilibj.command.Subsystem;
import edu.wpi.first.wpilibj.smartdashboard.SmartDashboard;


/**
 *
 */
public class climber extends Subsystem {

    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTANTS

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTANTS

    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS
    private final SpeedController climberMotor = RobotMap.climberclimberMotor;
    private final SpeedController climberMotor2 = RobotMap.climberclimberMotor2;

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS


    // Put methods for controlling this subsystem
    // here. Call these from Commands.

    public void takeJoytickInput(Joystick main){
    	if(main.getRawButton(3)){
    		climberMotor.set(1);
    		climberMotor2.set(1);
    	}
    	else if(main.getRawButton(4)){
    		climberMotor.set(-1);
    		climberMotor2.set(-1);
    	}
    	else{
    		climberMotor.stopMotor();
    		climberMotor2.stopMotor();
    	}
    }
    
    public void climbWithLeap(){
    	double climbValue = SmartDashboard.getNumber("handY");
    	if(climbValue > 0.5){
    		climberMotor.set(1);
    		climberMotor2.set(1);
    	}
    	else if(climbValue < -0.5){
    		climberMotor.set(-1);
    		climberMotor2.set(-1);
    	}
    	else{
    		climberMotor.stopMotor();
    		climberMotor2.stopMotor();
    	}
    }
    	
    	
    	
    
    public void stop(){
    	climberMotor.stopMotor();
    	climberMotor2.stopMotor();
    }
    
    
    
    public void initDefaultCommand() {
        // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DEFAULT_COMMAND

        setDefaultCommand(new climberControl());

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DEFAULT_COMMAND

        // Set the default command for a subsystem here.
        // setDefaultCommand(new MySpecialCommand());
    }
}

